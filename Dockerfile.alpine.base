ARG BASE
FROM alpine:${BASE}

ENV CATALINA_HOME=/opt/tomcat \
    GUACAMOLE_HOME=/app/guacamole \
    PGDATA=/config/postgres \
    POSTGRES_USER=guacamole \
    POSTGRES_DB=guacamole_db \
    POSTGREJDBC_VER=42.7.8 \
    S6OVERLAY_VER=3.2.1.0 \
    GUAC_DOWN_PATH=https://dlcdn.apache.org/guacamole \
    GUAC_VER=1.5.5 \
    GUAC_VER_PATH=1.5.5 \
    TOMCAT_VER=9.0.110

RUN set -xe && \
    apk add --update --no-cache \
            openjdk8-jre \
            git \  
            curl \  
            libc-dev \ 
            gcc \ 
            make \  
            automake \  
            autoconf \  
            cairo-dev \   
            libjpeg-turbo-dev \ 
            libpng-dev \
            libtool \
            libuuid \
            ffmpeg4-dev \
            freerdp-dev \ 
            pango-dev \
            libssh2-dev \
            libvncserver-dev \
            libwebsockets-dev \ 
            pulseaudio-dev \ 
            openssl-dev \
            libvorbis-dev \ 
            libwebp-dev \
            ttf-dejavu \
            xmlstarlet \
    && cd /tmp && \
    wget --no-check-certificate https://github.com/seanmiddleditch/libtelnet/releases/download/0.23/libtelnet-0.23.tar.gz && \
    tar -xzvf libtelnet-0.23.tar.gz && \
    cd libtelnet-0.23 && \
    ./configure && \
    make -j$(getconf _NPROCESSORS_ONLN) && \
    make install && \
    cd /tmp && \ 
    wget --no-check-certificate https://github.com/just-containers/s6-overlay/releases/download/v${S6OVERLAY_VER}/s6-overlay-noarch.tar.xz && \
    wget --no-check-certificate https://github.com/just-containers/s6-overlay/releases/download/v${S6OVERLAY_VER}/s6-overlay-x86_64.tar.xz && \
    wget --no-check-certificate https://github.com/just-containers/s6-overlay/releases/download/v${S6OVERLAY_VER}/s6-overlay-aarch64.tar.xz && \
	wget --no-check-certificate https://github.com/just-containers/s6-overlay/releases/download/v${S6OVERLAY_VER}/s6-overlay-armhf.tar.xz && \
    wget --no-check-certificate https://github.com/just-containers/s6-overlay/releases/download/v${S6OVERLAY_VER}/s6-overlay-symlinks-noarch.tar.xz && \
    wget --no-check-certificate https://github.com/just-containers/s6-overlay/releases/download/v${S6OVERLAY_VER}/syslogd-overlay-noarch.tar.xz && \
    tar -C / -Jxpf /tmp/s6-overlay-noarch.tar.xz && \
    if [ "$(arch)" = "x86_64" ] ; then tar -C / -Jxpf /tmp/s6-overlay-x86_64.tar.xz; elif [ "$(arch)" = "armhf" ]||[ "$(arch)" = "armv7l" ] ; then tar -C / -Jxpf /tmp/s6-overlay-armhf.tar.xz; else tar -C / -Jxpf /tmp/s6-overlay-aarch64.tar.xz; fi  &&\
    tar -C / -Jxpf /tmp/s6-overlay-symlinks-noarch.tar.xz && \
    tar -C / -Jxpf /tmp/syslogd-overlay-noarch.tar.xz && \
    rm /tmp/*.tar.xz &&\
    ( ln -s /usr/local/lib/freerdp /usr/lib/arm-linux-gnueabihf/freerdp ||  \
     ln -s /usr/local/lib/freerdp /usr/lib/arm-linux-gnueabi/freerdp   || \
     ln -s /usr/local/lib/freerdp /usr/lib/x86_64-linux-gnu/freerdp    ||  \
     ln -s /usr/local/lib/freerdp /usr/lib/aarch64-linux-gnu/freerdp   || \
	 ln -s /usr/local/lib/freerdp /usr/lib/ppc64el-linux-gnu/freerdp   || \
	 ln -s /usr/local/lib/freerdp /usr/lib/aarch64-linux-gnu/freerdp   || true ) &&\
    mkdir -p ${CATALINA_HOME}  \
                         ${GUACAMOLE_HOME} \
                         ${GUACAMOLE_HOME}/lib \
                         ${GUACAMOLE_HOME}/extensions \
                         ${GUACAMOLE_HOME}/extensions-available \
                         /git &&\
    wget https://dlcdn.apache.org/tomcat/tomcat-9/v$TOMCAT_VER/bin/apache-tomcat-$TOMCAT_VER.tar.gz --no-check-certificate && \
    tar xvzf apache-tomcat-$TOMCAT_VER.tar.gz --strip-components 1 --directory /opt/tomcat && \
    export LDFLAGS="-lrt" && \
    curl -SLO "${GUAC_DOWN_PATH}/${GUAC_VER_PATH}/source/guacamole-server-${GUAC_VER}.tar.gz" && \
    tar -xzf guacamole-server-${GUAC_VER}.tar.gz && \
    cd guacamole-server-${GUAC_VER} && \
    autoreconf -fi && \
    ./configure --enable-allow-freerdp-snapshots && \
    make -j$(getconf _NPROCESSORS_ONLN) && \
    make install && \
    cd .. && \
    rm -rf guacamole-server-${GUAC_VER}.tar.gz guacamole-server-${GUAC_VER} && \
    ldconfig -v /usr/local/lib &&\
    rm -rf ${CATALINA_HOME}/webapps/ROOT &&\
    curl -SLo ${CATALINA_HOME}/webapps/ROOT.war "${GUAC_DOWN_PATH}/${GUAC_VER_PATH}/binary/guacamole-${GUAC_VER}.war" && \
    curl -SLo ${GUACAMOLE_HOME}/lib/postgresql-${POSTGREJDBC_VER}.jar "https://jdbc.postgresql.org/download/postgresql-${POSTGREJDBC_VER}.jar" &&\
    curl -SLO "${GUAC_DOWN_PATH}/${GUAC_VER_PATH}/binary/guacamole-auth-jdbc-${GUAC_VER}.tar.gz" &&\
    tar -xzf guacamole-auth-jdbc-${GUAC_VER}.tar.gz &&\
    cp -R guacamole-auth-jdbc-${GUAC_VER}/postgresql/guacamole-auth-jdbc-postgresql-${GUAC_VER}.jar ${GUACAMOLE_HOME}/extensions/ &&\
    cp -R guacamole-auth-jdbc-${GUAC_VER}/postgresql/schema ${GUACAMOLE_HOME}/ &&\
    rm -rf guacamole-auth-jdbc-${GUAC_VER} guacamole-auth-jdbc-${GUAC_VER}.tar.gz &&\
    for i in auth-duo auth-quickconnect auth-header auth-ldap auth-json auth-totp history-recording-storage; do \
      echo "${GUAC_DOWN_PATH}/${GUAC_VER_PATH}/binary/guacamole-${i}-${GUAC_VER}.tar.gz"  &&\
      curl -SLO "${GUAC_DOWN_PATH}/${GUAC_VER_PATH}/binary/guacamole-${i}-${GUAC_VER}.tar.gz" &&\
      tar -xzf guacamole-${i}-${GUAC_VER}.tar.gz &&\
      cp guacamole-${i}-${GUAC_VER}/guacamole-${i}-${GUAC_VER}.jar ${GUACAMOLE_HOME}/extensions-available/ &&\
      rm -rf guacamole-${i}-${GUAC_VER} guacamole-${i}-${GUAC_VER}.tar.gz \
    ;done &&\
    curl -SLO "${GUAC_DOWN_PATH}/${GUAC_VER_PATH}/binary/guacamole-auth-sso-${GUAC_VER}.tar.gz" &&\
    tar -xzf guacamole-auth-sso-${GUAC_VER}.tar.gz &&\
    for i in cas openid saml; do \
      cp guacamole-auth-sso-${GUAC_VER}/${i}/guacamole-auth-sso-${i}-${GUAC_VER}.jar ${GUACAMOLE_HOME}/extensions-available/ \
    ;done &&\
    rm -rf guacamole-auth-sso-${GUAC_VER} guacamole-auth-sso-${GUAC_VER}.tar.gz \
# Special case for Vault extension. Currently supports only ksm, but it seems there are plans for future providers 
# I keep the for loop, just in case future releases of guacamole bundles other extensions...
  && curl -SLO "${GUAC_DOWN_PATH}/${GUAC_VER_PATH}/binary/guacamole-vault-${GUAC_VER}.tar.gz" \
  && tar -xzf guacamole-vault-${GUAC_VER}.tar.gz \
  && for i in ksm; do \
    cp guacamole-vault-${GUAC_VER}/${i}/guacamole-vault-${i}-${GUAC_VER}.jar ${GUACAMOLE_HOME}/extensions-available/ \
  ;done \
  && rm -rf guacamole-vault-${GUAC_VER} guacamole-vault-${GUAC_VER}.tar.gz

COPY root /
COPY root_alpine /

ENV GUACAMOLE_HOME=/config/guacamole \
    GUACD_LOG_LEVEL=info \
    S6_CMD_WAIT_FOR_SERVICES_MAXTIME=0

WORKDIR /config

EXPOSE 8080

ENTRYPOINT [ "/init" ]

HEALTHCHECK  --timeout=3s CMD wget --no-verbose --tries=1 --spider http://localhost:8080 || exit 1
